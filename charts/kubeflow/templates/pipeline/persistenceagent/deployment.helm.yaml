apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubeflow.pipeline.persistenceAgent.fullname" . }}
  namespace: {{ include "kubeflow.namespace" . }}
  labels:
    {{- include "kubeflow.pipeline.persistenceAgent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kubeflow.pipeline.persistenceAgent.matchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        {{- include "kubeflow.pipeline.persistenceAgent.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "kubeflow.pipeline.persistenceAgent.fullname" . }}
      containers:
        - name: persistenceagent
          image: "{{ .Values.pipeline.persistenceAgent.image.repository }}:{{ .Values.pipeline.persistenceAgent.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              value: ""
            - name: TTL_SECONDS_AFTER_WORKFLOW_FINISH
              value: "86400"
            - name: NUM_WORKERS
              value: "2"
            - name: KUBEFLOW_USERID_HEADER
              value: {{ .Values.headers.userId | quote }}
            - name: KUBEFLOW_USERID_PREFIX
              value: ""
          envFrom:
            - configMapRef:
                name: {{ include "kubeflow.pipeline.persistenceAgent.fullname" . }}
          resources:
            requests:
              cpu: 120m
              memory: 500Mi
          volumeMounts:
            - mountPath: /var/run/secrets/kubeflow/tokens
              name: persistenceagent-sa-token
      volumes:
        - name: persistenceagent-sa-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: pipelines.kubeflow.org
                  expirationSeconds: 3600
                  path: persistenceagent-sa-token