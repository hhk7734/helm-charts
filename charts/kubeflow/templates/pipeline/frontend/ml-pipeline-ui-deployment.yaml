---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-pipeline-ui
  namespace: {{ include "kubeflow.namespace" . }}
  labels:
    app: ml-pipeline-ui
    app.kubernetes.io/component: ml-pipeline
    app.kubernetes.io/name: kubeflow-pipelines
    application-crd-id: kubeflow-pipelines
spec:
  selector:
    matchLabels:
      app: ml-pipeline-ui
      app.kubernetes.io/component: ml-pipeline
      app.kubernetes.io/name: kubeflow-pipelines
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: ml-pipeline-ui
        app.kubernetes.io/component: ml-pipeline
        app.kubernetes.io/name: kubeflow-pipelines
        application-crd-id: kubeflow-pipelines
    spec:
      serviceAccountName: ml-pipeline-ui
      containers:
        - name: ml-pipeline-ui
          image: gcr.io/ml-pipeline/frontend:2.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
              value: /etc/config/viewer-pod-template.json
            - name: DEPLOYMENT
              value: KUBEFLOW
            - name: ARTIFACTS_SERVICE_PROXY_NAME
              value: ml-pipeline-ui-artifact
            - name: ARTIFACTS_SERVICE_PROXY_PORT
              value: "80"
            - name: ARTIFACTS_SERVICE_PROXY_ENABLED
              value: "true"
            - name: ENABLE_AUTHZ
              value: "true"
            - name: KUBEFLOW_USERID_HEADER
              value: {{ .Values.headers.userId }}
            - name: KUBEFLOW_USERID_PREFIX
              value: ""
            {{- if eq .Values.pipeline.objectStore.host "s3.amazonaws.com" }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: mlpipeline-minio-artifact
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: secretkey
                  name: mlpipeline-minio-artifact
            {{- with .Values.pipeline.objectStore.region }}
            - name: AWS_REGION
              value: {{ . }}
            {{- end }}
            {{- else }}
            - name: MINIO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: mlpipeline-minio-artifact
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secretkey
                  name: mlpipeline-minio-artifact
            {{- end }}
            - name: ALLOW_CUSTOM_VISUALIZATIONS
              value: "true"
          livenessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - "-"
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - "-"
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 10m
              memory: 70Mi
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
              readOnly: true
      volumes:
        - configMap:
            name: ml-pipeline-ui-configmap
          name: config-volume
