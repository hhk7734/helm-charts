apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app-service-account
  namespace: kubeflow
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - kubeflow.org
  resources:
  - notebooks
  verbs:
  - list
- apiGroups:
  - kubeflow.org
  resources:
  - pvcviewers
  verbs:
  - get
  - list
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: volumes-web-app-kubeflow-volume-ui-admin
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-edit: "true"
  name: volumes-web-app-kubeflow-volume-ui-edit
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - kubeflow.org
  resources:
  - pvcviewers
  verbs:
  - get
  - list
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-view: "true"
  name: volumes-web-app-kubeflow-volume-ui-view
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubeflow.org
  resources:
  - pvcviewers
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: volumes-web-app-cluster-role
subjects:
- kind: ServiceAccount
  name: volumes-web-app-service-account
  namespace: kubeflow
---
apiVersion: v1
data:
  VWA_APP_SECURE_COOKIES: "true"
  VWA_CLUSTER_DOMAIN: cluster.local
  VWA_PREFIX: /volumes
  VWA_USERID_HEADER: kubeflow-userid
  VWA_USERID_PREFIX: ""
kind: ConfigMap
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app-parameters-57h65c44mg
  namespace: kubeflow
---
apiVersion: v1
data:
  viewer-spec.yaml: |
    # Note: the volumes-web-app allows expanding strings using ${VAR_NAME}
    # You may use any environment variable. This lets us e.g. specify images that can be modified using kustomize's image transformer.
    # Additionally, 'PVC_NAME', 'NAME' and 'NAMESPACE' are defined
    # Name of the pvc is set by the volumes web app
    pvc: $NAME
    podSpec:
      serviceAccountName: default-editor
      containers:
        - name: main
          image: $VOLUME_VIEWER_IMAGE
          env:
            - name: FB_ADDRESS
              value: "0.0.0.0"
            - name: FB_PORT
              value: "8080"
            - name: FB_DATABASE
              value: /tmp/filebrowser.db
            - name: FB_NOAUTH
              value: "true"
            - name: FB_BASEURL
              value: /pvcviewers/$NAMESPACE/$NAME/
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 10
          # viewer-volume is provided automatically by the volumes web app
          volumeMounts:
            - name: viewer-volume
              mountPath: /srv
          workingDir: /srv
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: viewer-volume
          persistentVolumeClaim:
            claimName: $NAME
    networking:
      targetPort: 8080
      basePrefix: "/pvcviewers"
      rewrite: "/"
      timeout: 30s
    rwoScheduling: true
kind: ConfigMap
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app-viewer-spec-gm954c98h6
  namespace: kubeflow
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
    run: volumes-web-app
  name: volumes-web-app-service
  namespace: kubeflow
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app-deployment
  namespace: kubeflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volumes-web-app
      kustomize.component: volumes-web-app
  template:
    metadata:
      labels:
        app: volumes-web-app
        kustomize.component: volumes-web-app
    spec:
      containers:
      - env:
        - name: APP_PREFIX
          value: /volumes
        - name: USERID_HEADER
          value: kubeflow-userid
        - name: USERID_PREFIX
          value: ""
        - name: APP_SECURE_COOKIES
          value: "true"
        - name: VOLUME_VIEWER_IMAGE
          value: filebrowser/filebrowser:v2.23.0
        image: docker.io/kubeflownotebookswg/volumes-web-app:v1.8.0
        name: volumes-web-app
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /etc/config/viewer-spec.yaml
          name: viewer-spec
          subPath: viewer-spec.yaml
      serviceAccountName: volumes-web-app-service-account
      volumes:
      - configMap:
          name: volumes-web-app-viewer-spec-gm954c98h6
        name: viewer-spec
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app
  namespace: kubeflow
spec:
  host: volumes-web-app-service.kubeflow.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app-volumes-web-app
  namespace: kubeflow
spec:
  gateways:
  - kubeflow-gateway
  hosts:
  - '*'
  http:
  - headers:
      request:
        add:
          x-forwarded-prefix: /volumes
    match:
    - uri:
        prefix: /volumes/
    rewrite:
      uri: /
    route:
    - destination:
        host: volumes-web-app-service.kubeflow.svc.cluster.local
        port:
          number: 80
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  labels:
    app: volumes-web-app
    kustomize.component: volumes-web-app
  name: volumes-web-app
  namespace: kubeflow
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account
  selector:
    matchLabels:
      app: volumes-web-app
